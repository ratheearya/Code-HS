var NUM_COLS = 7;
var NUM_ROWS = 6;
var RAD=getWidth()/NUM_COLS/2;
var board=new Grid(NUM_ROWS,NUM_COLS);
var black=1;
var red=2;
var curTurn=black;
var DIA=RAD*2;
function start(){
    board.init(0);
    drawBoard();
    mouseClickMethod(turn);
}
function checkWinner(row,col){
    if(board.get(row,col)==1){
        var player="black";
        var curP=1;
    }
    if(board.get(row,col)==2){
        var player="red";
        var curP=2;
    }
    checkCol(col,player,curP);
    checkRow(row,player,curP);
    checkDia(row,col,player,curP);
}

function endGame(player){
    removeAll();
    var txt=new Text(player+" wins!","30pt Arial");
    txt.setPosition(100,200);
    txt.setColor(Color.blue);
    add(txt);
}
function checkCol(col,player,curP){
    var streak = 0;
    for(var row=0; row < NUM_ROWS;row++){
        if(board.get(row,col)==curP){
            streak++;
            if(streak==4){
                endGame(player);
            }
        }else{
            streak=0;
        }
    }
}
function checkRow(row,player,curP){
    var streak=0;
    for(var col=0;col<NUM_COLS;col++){
        if(board.get(row,col)==curP){
            streak++;
            if(streak==4){
                endGame(player);
            }
        }else{
            streak=0;
        }
    }
}
function checkDia(row,col,player,curP){
    var streak =0;
}






























function turn(e,){
    var col = convertToColIndex(e.getX()-1);
    var row = NUM_ROWS-1;
    
    if(board.get(row,col) == 0){
        addpiece(row,col);
    }else if(board.get(row,col)== 1 || board.get(row,col)==2){
        while(board.get(row,col) !=0 && row!=0){
            row=row-1;
        }
        if(board.get(0,col)==0){
            addpiece(row,col);
        }else{
            println("column full");
        }
    }
    checkWinner(row,col);
}
function convertToColIndex(x){
    var col=Math.floor(x/(2*RAD));
    return col;
}
function addRed(row,col){
    var redCirc= new Circle(RAD);
    redCirc.setColor(Color.red);
    redCirc.setPosition((col*DIA)+RAD,(row*DIA)+RAD);
    add(redCirc);
    
}
function addBlack(row,col){
    var blackCirc= new Circle(RAD);
    blackCirc.setColor(Color.black);
    blackCirc.setPosition((col*DIA)+RAD,(row*DIA)+RAD);
    add(blackCirc);
}
function addpiece(row,col){
    if(curTurn==black){
        board.set(row,col,1);
        addBlack(row,col);
        curTurn=red;
    }else if(curTurn==red){
        board.set(row,col,2);
        addRed(row,col); 
        curTurn=black;
    }
}

function drawBoard(){
    var rect= new Rectangle(getWidth(),RAD*2*NUM_ROWS);
    rect.setColor(Color.blue);
    rect.setPosition(0,0);
    add(rect); 
    for(var i=0;i<NUM_ROWS;i++){
     makeRow(i);   
    }
}

function makeRow(i,board){
    for(var j=0;j<NUM_COLS;j++){
        var circ=new Circle(RAD);
        circ.setPosition(j*RAD*2+RAD,i*RAD*2+RAD);
        circ.setColor(Color.white);
        add(circ);
    }
}
